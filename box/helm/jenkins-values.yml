controller:
  image: "jenkins/jenkins"
  tag: "2.319.3"
  adminPassword: "dynatrace"
  numExecutors: 2
  disableRememberMe: false
  ingress:
    enabled: true
    hostName: jenkins.INGRESS_PLACEHOLDER
    annotations:
      kubernetes.io/ingress.class: "nginx"
  containerEnv:
    - name: GITHUB_USER_EMAIL
      value: GITHUB_USER_EMAIL_PLACEHOLDER
    - name: GITHUB_ORGANIZATION
      value: GITHUB_ORGANIZATION_PLACEHOLDER
    - name: GITHUB_USER_NAME
      value: GITHUB_USER_NAME_PLACEHOLDER
    - name: GITHUB_PERSONAL_ACCESS_TOKEN
      value: GITHUB_PERSONAL_ACCESS_TOKEN_PLACEHOLDER
    - name: GIT_REPO
      value: GIT_REPO_PLACEHOLDER
    - name: GIT_DOMAIN
      value: GIT_DOMAIN_PLACEHOLDER
    - name: GIT_PROTOCOL
      value: http
    - name: DT_TENANT_URL
      value: DT_TENANT_URL_PLACEHOLDER
    - name: DT_API_TOKEN
      value: DT_API_TOKEN_PLACEHOLDER
    - name: SYNTH_NODE_ID
      value: SYNTH_NODE_ID_PLACEHOLDER
    - name: VM_IP
      value: VM_IP_PLACEHOLDER
    - name: JAVA_OPTS
      value: -Djenkins.install.runSetupWizard=false
  csrf:
    defaultCrumbIssuer:
      enabled: false
      proxyCompatability: true
  installPlugins:
    - command-launcher:1.6
    - kubernetes:1.29.6
    - kubernetes-credentials-provider:0.18-1
    - workflow-job:2.41
    - workflow-aggregator:2.6
    - credentials-binding:1.25
    - git:4.7.2
    - google-oauth-plugin:1.0.5
    - google-source-plugin:0.4
    - performance:3.19
    - github-branch-source:2.10.4
    - job-dsl:1.77
    - pipeline-build-step:2.13
    - docker-plugin:1.2.2
    - blueocean:1.24.7
    - configuration-as-code:1.51
    - http_request:1.9.0
    - pipeline-utility-steps:2.8.0
    - ansible:1.1
    - gitea:1.2.1
  installLatestPlugins: false
  JCasC:
    enabled: true
    defaultConfig: true
    configScripts:
      jenkins-settings: |
        jenkins:
          agentProtocols:
          - "JNLP4-connect"
          - "Ping"
          authorizationStrategy:
            loggedInUsersCanDoAnything:
              allowAnonymousRead: false
          systemMessage: Welcome to the ACE BOX CI\CD server.  This Jenkins is configured and managed 'as code'.
          globalNodeProperties:
          - envVars:
              env:
              - key: "GITHUB_USER_EMAIL"
                value: ${GITHUB_USER_EMAIL} #Load from Environment Variable
              - key: "GITHUB_ORGANIZATION"
                value: ${GITHUB_ORGANIZATION} #Load from Environment Variable
              - key: "GIT_REPO"
                value: ${GIT_REPO} #Load from Environment Variable
              - key: "GIT_DOMAIN"
                value: ${GIT_DOMAIN} #Load from Environment Variable
              - key: "GIT_PROTOCOL"
                value: ${GIT_PROTOCOL} #Load from Environment Variable
              - key: "DT_TENANT_URL"
                value: ${DT_TENANT_URL} #Load from Environment Variable
              - key: "DT_API_TOKEN"
                value: ${DT_API_TOKEN} #Load from Environment Variable
              - key: "SYNTH_NODE_ID"
                value: ${SYNTH_NODE_ID} #Load from Environment Variable
              - key: "VM_IP"
                value: ${VM_IP} #Load from Environment Variable
          clouds:
          - kubernetes:
              containerCapStr: "10"
              jenkinsTunnel: "jenkins-agent:50000"
              jenkinsUrl: "http://jenkins:8080"
              maxRequestsPerHostStr: "32"
              name: "kubernetes"
              namespace: "jenkins"
              serverUrl: "https://kubernetes.default"
              templates:
              - containers:
                - args: "cat"
                  command: "/bin/sh -c"
                  envVars:
                  - envVar:
                      key: "JENKINS_URL"
                      value: "http://jenkins.ace.svc.cluster.local:8080"
                  image: "jenkinsci/jnlp-slave"
                  livenessProbe:
                    failureThreshold: 0
                    initialDelaySeconds: 0
                    periodSeconds: 0
                    successThreshold: 0
                    timeoutSeconds: 0
                  name: "jenkins-slave"
                  resourceLimitCpu: "512m"
                  resourceLimitMemory: "512Mi"
                  resourceRequestCpu: "512m"
                  resourceRequestMemory: "512Mi"
                  workingDir: "/home/jenkins"
                hostNetwork: false
                label: "jenkins-slave "
                name: "jenkins-slave"
                nodeUsageMode: NORMAL
                slaveConnectTimeout: 300
                slaveConnectTimeoutStr: "300"
                serviceAccount: "default"
                yamlMergeStrategy: "override"
              - containers:
                - args: "cat"
                  command: "/bin/sh -c"
                  image: "alpine/git"
                  livenessProbe:
                    failureThreshold: 0
                    initialDelaySeconds: 0
                    periodSeconds: 0
                    successThreshold: 0
                    timeoutSeconds: 0
                  name: "git"
                  ttyEnabled: true
                  workingDir: "/home/jenkins/agent"
                label: "git"
                name: "Git"
                nodeUsageMode: NORMAL
                slaveConnectTimeout: 300
                slaveConnectTimeoutStr: "300"
                yamlMergeStrategy: "override"
              - containers:
                - alwaysPullImage: false
                  args: "cat"
                  command: "/bin/sh -c"
                  image: "dynatraceace/monaco-runner:release-v1.6.0"
                  livenessProbe:
                    failureThreshold: 0
                    initialDelaySeconds: 0
                    periodSeconds: 0
                    successThreshold: 0
                    timeoutSeconds: 0
                  name: "monaco"
                  ttyEnabled: true
                  workingDir: "/home/jenkins/agent"
                id: "5775568b-4919-442c-9644-5d386216942b"
                label: "monaco-runner"
                name: "monaco-runner"
                yamlMergeStrategy: "override"
        credentials:
          system:
            domainCredentials:
              - credentials:
                - usernamePassword:
                    username: ${GITHUB_USER_NAME} #Load from Environment Variable
                    password: ${GITHUB_PERSONAL_ACCESS_TOKEN} #Load from Environment Variable
                    description: "Github Credentials for ACE"
                    id: "git-creds-ace"
                    scope: GLOBAL
        jobs:
          - script: >
              pipelineJob('Exercise 2 - Apply all') {
                definition {
                  cpsScm {
                    scriptPath('jenkins/exercise-two.Jenkinsfile')
                    scm {
                      git {
                          remote { 
                            url('${GIT_PROTOCOL}://${GIT_DOMAIN}/${GITHUB_ORGANIZATION}/${GIT_REPO}')
                          }
                          branch('*/master')
                      }
                    }
                    lightweight()
                  }
                }
              }
          - script: >
              pipelineJob('Exercise 4 - Update config') {
                definition {
                  cpsScm {
                    scriptPath('jenkins/exercise-four.Jenkinsfile')
                    scm {
                      git {
                          remote { 
                            url('${GIT_PROTOCOL}://${GIT_DOMAIN}/${GITHUB_ORGANIZATION}/${GIT_REPO}')
                          }
                          branch('*/master')
                      }
                    }
                    lightweight()
                  }
                }
              }
          - script: >
              pipelineJob('Exercise 5 - Onboard app') {
                parameters {
                  choiceParam('Environment', ['Staging','Production'], '')
                  stringParam('App_Name', 'demo-app', 'Name of the application to deploy')
                  stringParam('Application_URL_pattern', 'http://demo.app/v1/', 'URL for application detection rule')
                  stringParam('Kubernetes_Namespace', 'demo-app-staging', 'Kubernetes namespace of the app')
                  stringParam('Health_check_url', 'https://dynatrace.com', 'URL for synthetic monitoring')
                  booleanParam('Skip_synthetic_monitor_deployment', false, 'Skip the deployment of the HTTP monitor')
                }
                definition {
                  cpsScm {
                    scriptPath('jenkins/exercise-five.Jenkinsfile')
                    scm {
                      git {
                          remote { 
                            url('${GIT_PROTOCOL}://${GIT_DOMAIN}/${GITHUB_ORGANIZATION}/${GIT_REPO}')
                          }
                          branch('*/master')
                      }
                    }
                    lightweight()
                  }
                }
              }
          - script: >
              pipelineJob('Exercise 7 - Linking configuration') {
                definition {
                  cpsScm {
                    scriptPath('jenkins/exercise-seven.Jenkinsfile')
                    scm {
                      git {
                          remote { 
                            url('${GIT_PROTOCOL}://${GIT_DOMAIN}/${GITHUB_ORGANIZATION}/${GIT_REPO}')
                          }
                          branch('*/master')
                      }
                    }
                    lightweight()
                  }
                }
              }
